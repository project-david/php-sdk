<?xml version="1.0" encoding="UTF-8"?>
<crap_result>
  <project/>
  <timestamp>2021-04-22 16:17:30</timestamp>
  <stats>
    <name>Method Crap Stats</name>
    <methodCount>76</methodCount>
    <crapMethodCount>0</crapMethodCount>
    <crapLoad>0</crapLoad>
    <totalCrap>342.27</totalCrap>
    <crapMethodPercent>0</crapMethodPercent>
  </stats>
  <methods>
    <method>
      <package>GravityLegal\GravityLegalAPI</package>
      <className>GravityLegal\GravityLegalAPI\CreateUserResponseResult</className>
      <methodName>GetCreatedUser</methodName>
      <methodSignature>GetCreatedUser(): GravityLegal\GravityLegalAPI\User</methodSignature>
      <fullMethod>GetCreatedUser(): GravityLegal\GravityLegalAPI\User</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>GravityLegal\GravityLegalAPI</package>
      <className>GravityLegal\GravityLegalAPI\GravityLegalService</className>
      <methodName>__construct</methodName>
      <methodSignature>__construct(array $envVariables)</methodSignature>
      <fullMethod>__construct(array $envVariables)</fullMethod>
      <crap>2</crap>
      <complexity>2</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>GravityLegal\GravityLegalAPI</package>
      <className>GravityLegal\GravityLegalAPI\GravityLegalService</className>
      <methodName>IsOnline</methodName>
      <methodSignature>IsOnline(): bool</methodSignature>
      <fullMethod>IsOnline(): bool</fullMethod>
      <crap>2</crap>
      <complexity>2</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>GravityLegal\GravityLegalAPI</package>
      <className>GravityLegal\GravityLegalAPI\GravityLegalService</className>
      <methodName>GetInvitedUsers</methodName>
      <methodSignature>GetInvitedUsers(DateTime $createdSinceDateTime): array</methodSignature>
      <fullMethod>GetInvitedUsers(DateTime $createdSinceDateTime): array</fullMethod>
      <crap>9</crap>
      <complexity>9</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>GravityLegal\GravityLegalAPI</package>
      <className>GravityLegal\GravityLegalAPI\GravityLegalService</className>
      <methodName>GetUserByEmail</methodName>
      <methodSignature>GetUserByEmail(string $emailAddress): ?GravityLegal\GravityLegalAPI\User</methodSignature>
      <fullMethod>GetUserByEmail(string $emailAddress): ?GravityLegal\GravityLegalAPI\User</fullMethod>
      <crap>3</crap>
      <complexity>3</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>GravityLegal\GravityLegalAPI</package>
      <className>GravityLegal\GravityLegalAPI\GravityLegalService</className>
      <methodName>GetUserById</methodName>
      <methodSignature>GetUserById(string $userId): ?GravityLegal\GravityLegalAPI\User</methodSignature>
      <fullMethod>GetUserById(string $userId): ?GravityLegal\GravityLegalAPI\User</fullMethod>
      <crap>2</crap>
      <complexity>2</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>GravityLegal\GravityLegalAPI</package>
      <className>GravityLegal\GravityLegalAPI\GravityLegalService</className>
      <methodName>FetchUsers</methodName>
      <methodSignature>FetchUsers(DateTime $createdSinceDateTime): GravityLegal\GravityLegalAPI\EntityQueryResult</methodSignature>
      <fullMethod>FetchUsers(DateTime $createdSinceDateTime): GravityLegal\GravityLegalAPI\EntityQueryResult</fullMethod>
      <crap>10</crap>
      <complexity>10</complexity>
      <coverage>97.78</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>GravityLegal\GravityLegalAPI</package>
      <className>GravityLegal\GravityLegalAPI\GravityLegalService</className>
      <methodName>FetchCustomers</methodName>
      <methodSignature>FetchCustomers(DateTime $createdSinceDateTime): GravityLegal\GravityLegalAPI\EntityQueryResult</methodSignature>
      <fullMethod>FetchCustomers(DateTime $createdSinceDateTime): GravityLegal\GravityLegalAPI\EntityQueryResult</fullMethod>
      <crap>10</crap>
      <complexity>10</complexity>
      <coverage>97.78</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>GravityLegal\GravityLegalAPI</package>
      <className>GravityLegal\GravityLegalAPI\GravityLegalService</className>
      <methodName>FetchPaylinks</methodName>
      <methodSignature>FetchPaylinks(string $customerId, string $clientId, DateTime $createdSinceDateTime): GravityLegal\GravityLegalAPI\EntityQueryResult</methodSignature>
      <fullMethod>FetchPaylinks(string $customerId, string $clientId, DateTime $createdSinceDateTime): GravityLegal\GravityLegalAPI\EntityQueryResult</fullMethod>
      <crap>11</crap>
      <complexity>11</complexity>
      <coverage>97.96</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>GravityLegal\GravityLegalAPI</package>
      <className>GravityLegal\GravityLegalAPI\GravityLegalService</className>
      <methodName>GetCustomer</methodName>
      <methodSignature>GetCustomer(string $customerId): ?GravityLegal\GravityLegalAPI\Customer</methodSignature>
      <fullMethod>GetCustomer(string $customerId): ?GravityLegal\GravityLegalAPI\Customer</fullMethod>
      <crap>2</crap>
      <complexity>2</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>GravityLegal\GravityLegalAPI</package>
      <className>GravityLegal\GravityLegalAPI\GravityLegalService</className>
      <methodName>GetCustomerApiToken</methodName>
      <methodSignature>GetCustomerApiToken(string $customerId, string $tokenName, bool $createIfNotFound): ?GravityLegal\GravityLegalAPI\CustomerApiToken</methodSignature>
      <fullMethod>GetCustomerApiToken(string $customerId, string $tokenName, bool $createIfNotFound): ?GravityLegal\GravityLegalAPI\CustomerApiToken</fullMethod>
      <crap>14.1</crap>
      <complexity>10</complexity>
      <coverage>65.52</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>GravityLegal\GravityLegalAPI</package>
      <className>GravityLegal\GravityLegalAPI\GravityLegalService</className>
      <methodName>FetchClients</methodName>
      <methodSignature>FetchClients(DateTime $createdSinceDateTime): GravityLegal\GravityLegalAPI\EntityQueryResult</methodSignature>
      <fullMethod>FetchClients(DateTime $createdSinceDateTime): GravityLegal\GravityLegalAPI\EntityQueryResult</fullMethod>
      <crap>10</crap>
      <complexity>10</complexity>
      <coverage>97.78</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>GravityLegal\GravityLegalAPI</package>
      <className>GravityLegal\GravityLegalAPI\GravityLegalService</className>
      <methodName>CreateNewClients</methodName>
      <methodSignature>CreateNewClients(array $createClientList): GravityLegal\GravityLegalAPI\EntityCreationResult</methodSignature>
      <fullMethod>CreateNewClients(array $createClientList): GravityLegal\GravityLegalAPI\EntityCreationResult</fullMethod>
      <crap>3</crap>
      <complexity>3</complexity>
      <coverage>93.75</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>GravityLegal\GravityLegalAPI</package>
      <className>GravityLegal\GravityLegalAPI\GravityLegalService</className>
      <methodName>CreateNewUsers</methodName>
      <methodSignature>CreateNewUsers(array $createNewUserList): GravityLegal\GravityLegalAPI\EntityCreationResult</methodSignature>
      <fullMethod>CreateNewUsers(array $createNewUserList): GravityLegal\GravityLegalAPI\EntityCreationResult</fullMethod>
      <crap>3</crap>
      <complexity>3</complexity>
      <coverage>94.12</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>GravityLegal\GravityLegalAPI</package>
      <className>GravityLegal\GravityLegalAPI\GravityLegalService</className>
      <methodName>GetClient</methodName>
      <methodSignature>GetClient(string $clientId): ?GravityLegal\GravityLegalAPI\Client</methodSignature>
      <fullMethod>GetClient(string $clientId): ?GravityLegal\GravityLegalAPI\Client</fullMethod>
      <crap>2</crap>
      <complexity>2</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>GravityLegal\GravityLegalAPI</package>
      <className>GravityLegal\GravityLegalAPI\GravityLegalService</className>
      <methodName>MakeManualPayment</methodName>
      <methodSignature>MakeManualPayment(string $paylinkId, GravityLegal\GravityLegalAPI\ManualPayment $manualPayment): bool</methodSignature>
      <fullMethod>MakeManualPayment(string $paylinkId, GravityLegal\GravityLegalAPI\ManualPayment $manualPayment): bool</fullMethod>
      <crap>2</crap>
      <complexity>2</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>GravityLegal\GravityLegalAPI</package>
      <className>GravityLegal\GravityLegalAPI\GravityLegalService</className>
      <methodName>MakeManualPaymentWithIndividualParams</methodName>
      <methodSignature>MakeManualPaymentWithIndividualParams(string $paylinkId, ?float $operatingAmount, ?float $trustAmount, string $paidBy, string $payerEmail, bool $sendConfirmationEmailToPayer, string $paymentDescription, string $operatingBankAccountId, string $trustBankAccountId): bool</methodSignature>
      <fullMethod>MakeManualPaymentWithIndividualParams(string $paylinkId, ?float $operatingAmount, ?float $trustAmount, string $paidBy, string $payerEmail, bool $sendConfirmationEmailToPayer, string $paymentDescription, string $operatingBankAccountId, string $trustBankAccountId): bool</fullMethod>
      <crap>7</crap>
      <complexity>7</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>GravityLegal\GravityLegalAPI</package>
      <className>GravityLegal\GravityLegalAPI\GravityLegalService</className>
      <methodName>InitiateRefundForPaymentTxn</methodName>
      <methodSignature>InitiateRefundForPaymentTxn(string $paymentTxnId, float $amount, float $additionalAmount, string $emailForSendingConfirmation): bool</methodSignature>
      <fullMethod>InitiateRefundForPaymentTxn(string $paymentTxnId, float $amount, float $additionalAmount, string $emailForSendingConfirmation): bool</fullMethod>
      <crap>2</crap>
      <complexity>2</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>GravityLegal\GravityLegalAPI</package>
      <className>GravityLegal\GravityLegalAPI\GravityLegalService</className>
      <methodName>FetchMatters</methodName>
      <methodSignature>FetchMatters(DateTime $createdSinceDateTime): GravityLegal\GravityLegalAPI\EntityQueryResult</methodSignature>
      <fullMethod>FetchMatters(DateTime $createdSinceDateTime): GravityLegal\GravityLegalAPI\EntityQueryResult</fullMethod>
      <crap>9.03</crap>
      <complexity>9</complexity>
      <coverage>93.18</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>GravityLegal\GravityLegalAPI</package>
      <className>GravityLegal\GravityLegalAPI\GravityLegalService</className>
      <methodName>GetMatter</methodName>
      <methodSignature>GetMatter(string $matterId): ?GravityLegal\GravityLegalAPI\Matter</methodSignature>
      <fullMethod>GetMatter(string $matterId): ?GravityLegal\GravityLegalAPI\Matter</fullMethod>
      <crap>2</crap>
      <complexity>2</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>GravityLegal\GravityLegalAPI</package>
      <className>GravityLegal\GravityLegalAPI\GravityLegalService</className>
      <methodName>FetchBankAccounts</methodName>
      <methodSignature>FetchBankAccounts(string $customerId): GravityLegal\GravityLegalAPI\EntityQueryResult</methodSignature>
      <fullMethod>FetchBankAccounts(string $customerId): GravityLegal\GravityLegalAPI\EntityQueryResult</fullMethod>
      <crap>3</crap>
      <complexity>3</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>GravityLegal\GravityLegalAPI</package>
      <className>GravityLegal\GravityLegalAPI\GravityLegalService</className>
      <methodName>GetBankAccount</methodName>
      <methodSignature>GetBankAccount(string $bankAccountId): ?GravityLegal\GravityLegalAPI\BankAccount</methodSignature>
      <fullMethod>GetBankAccount(string $bankAccountId): ?GravityLegal\GravityLegalAPI\BankAccount</fullMethod>
      <crap>2</crap>
      <complexity>2</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>GravityLegal\GravityLegalAPI</package>
      <className>GravityLegal\GravityLegalAPI\GravityLegalService</className>
      <methodName>FetchContacts</methodName>
      <methodSignature>FetchContacts(string $givenClient, DateTime $createdSinceDateTime): GravityLegal\GravityLegalAPI\EntityQueryResult</methodSignature>
      <fullMethod>FetchContacts(string $givenClient, DateTime $createdSinceDateTime): GravityLegal\GravityLegalAPI\EntityQueryResult</fullMethod>
      <crap>9.03</crap>
      <complexity>9</complexity>
      <coverage>93.02</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>GravityLegal\GravityLegalAPI</package>
      <className>GravityLegal\GravityLegalAPI\GravityLegalService</className>
      <methodName>GetContactByEmail</methodName>
      <methodSignature>GetContactByEmail(string $emailAddress, string $clientId): ?GravityLegal\GravityLegalAPI\Contact</methodSignature>
      <fullMethod>GetContactByEmail(string $emailAddress, string $clientId): ?GravityLegal\GravityLegalAPI\Contact</fullMethod>
      <crap>4</crap>
      <complexity>4</complexity>
      <coverage>94.12</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>GravityLegal\GravityLegalAPI</package>
      <className>GravityLegal\GravityLegalAPI\GravityLegalService</className>
      <methodName>FindClientByEmail</methodName>
      <methodSignature>FindClientByEmail(string $emailAddress): ?GravityLegal\GravityLegalAPI\Client</methodSignature>
      <fullMethod>FindClientByEmail(string $emailAddress): ?GravityLegal\GravityLegalAPI\Client</fullMethod>
      <crap>2</crap>
      <complexity>2</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>GravityLegal\GravityLegalAPI</package>
      <className>GravityLegal\GravityLegalAPI\GravityLegalService</className>
      <methodName>GetContact</methodName>
      <methodSignature>GetContact(string $contactId): ?GravityLegal\GravityLegalAPI\Contact</methodSignature>
      <fullMethod>GetContact(string $contactId): ?GravityLegal\GravityLegalAPI\Contact</fullMethod>
      <crap>2</crap>
      <complexity>2</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>GravityLegal\GravityLegalAPI</package>
      <className>GravityLegal\GravityLegalAPI\GravityLegalService</className>
      <methodName>CreateNewContact</methodName>
      <methodSignature>CreateNewContact(GravityLegal\GravityLegalAPI\CreateContact $createContact): ?GravityLegal\GravityLegalAPI\Contact</methodSignature>
      <fullMethod>CreateNewContact(GravityLegal\GravityLegalAPI\CreateContact $createContact): ?GravityLegal\GravityLegalAPI\Contact</fullMethod>
      <crap>2</crap>
      <complexity>2</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>GravityLegal\GravityLegalAPI</package>
      <className>GravityLegal\GravityLegalAPI\GravityLegalService</className>
      <methodName>MakeContactPrimary</methodName>
      <methodSignature>MakeContactPrimary(GravityLegal\GravityLegalAPI\Contact $contact): bool</methodSignature>
      <fullMethod>MakeContactPrimary(GravityLegal\GravityLegalAPI\Contact $contact): bool</fullMethod>
      <crap>2</crap>
      <complexity>2</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>GravityLegal\GravityLegalAPI</package>
      <className>GravityLegal\GravityLegalAPI\GravityLegalService</className>
      <methodName>FindClient</methodName>
      <methodSignature>FindClient(string $customerId, string $clientName, bool $partialMatch): array</methodSignature>
      <fullMethod>FindClient(string $customerId, string $clientName, bool $partialMatch): array</fullMethod>
      <crap>9</crap>
      <complexity>9</complexity>
      <coverage>97.22</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>GravityLegal\GravityLegalAPI</package>
      <className>GravityLegal\GravityLegalAPI\GravityLegalService</className>
      <methodName>FindCustomer</methodName>
      <methodSignature>FindCustomer(string $name, bool $partialMatch): array</methodSignature>
      <fullMethod>FindCustomer(string $name, bool $partialMatch): array</fullMethod>
      <crap>12.51</crap>
      <complexity>9</complexity>
      <coverage>64.86</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>GravityLegal\GravityLegalAPI</package>
      <className>GravityLegal\GravityLegalAPI\GravityLegalService</className>
      <methodName>FindOrCreateClient</methodName>
      <methodSignature>FindOrCreateClient(GravityLegal\GravityLegalAPI\CreateClient $createClientParam): ?GravityLegal\GravityLegalAPI\Client</methodSignature>
      <fullMethod>FindOrCreateClient(GravityLegal\GravityLegalAPI\CreateClient $createClientParam): ?GravityLegal\GravityLegalAPI\Client</fullMethod>
      <crap>4</crap>
      <complexity>4</complexity>
      <coverage>93.75</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>GravityLegal\GravityLegalAPI</package>
      <className>GravityLegal\GravityLegalAPI\GravityLegalService</className>
      <methodName>CreateNewCustomers</methodName>
      <methodSignature>CreateNewCustomers(array $createCustomerList): GravityLegal\GravityLegalAPI\EntityCreationResult</methodSignature>
      <fullMethod>CreateNewCustomers(array $createCustomerList): GravityLegal\GravityLegalAPI\EntityCreationResult</fullMethod>
      <crap>3</crap>
      <complexity>3</complexity>
      <coverage>94.44</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>GravityLegal\GravityLegalAPI</package>
      <className>GravityLegal\GravityLegalAPI\GravityLegalService</className>
      <methodName>FindOrCreateCustomer</methodName>
      <methodSignature>FindOrCreateCustomer(GravityLegal\GravityLegalAPI\CreateCustomer $createCustomerParam): GravityLegal\GravityLegalAPI\Customer</methodSignature>
      <fullMethod>FindOrCreateCustomer(GravityLegal\GravityLegalAPI\CreateCustomer $createCustomerParam): GravityLegal\GravityLegalAPI\Customer</fullMethod>
      <crap>9.2</crap>
      <complexity>4</complexity>
      <coverage>31.25</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>GravityLegal\GravityLegalAPI</package>
      <className>GravityLegal\GravityLegalAPI\GravityLegalService</className>
      <methodName>GetClientInstanceInfoResponse</methodName>
      <methodSignature>GetClientInstanceInfoResponse(string $clientId): ?GravityLegal\GravityLegalAPI\ClientInstanceInfoResponseResult</methodSignature>
      <fullMethod>GetClientInstanceInfoResponse(string $clientId): ?GravityLegal\GravityLegalAPI\ClientInstanceInfoResponseResult</fullMethod>
      <crap>2</crap>
      <complexity>2</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>GravityLegal\GravityLegalAPI</package>
      <className>GravityLegal\GravityLegalAPI\GravityLegalService</className>
      <methodName>DeleteLedgerItem</methodName>
      <methodSignature>DeleteLedgerItem(string $ledgerItemId): bool</methodSignature>
      <fullMethod>DeleteLedgerItem(string $ledgerItemId): bool</fullMethod>
      <crap>6</crap>
      <complexity>2</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>GravityLegal\GravityLegalAPI</package>
      <className>GravityLegal\GravityLegalAPI\GravityLegalService</className>
      <methodName>DeletePaylink</methodName>
      <methodSignature>DeletePaylink(string $paylinkId): bool</methodSignature>
      <fullMethod>DeletePaylink(string $paylinkId): bool</fullMethod>
      <crap>2</crap>
      <complexity>2</complexity>
      <coverage>91.67</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>GravityLegal\GravityLegalAPI</package>
      <className>GravityLegal\GravityLegalAPI\GravityLegalService</className>
      <methodName>DeleteClient</methodName>
      <methodSignature>DeleteClient(string $clientId): bool</methodSignature>
      <fullMethod>DeleteClient(string $clientId): bool</fullMethod>
      <crap>30.21</crap>
      <complexity>15</complexity>
      <coverage>59.26</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>GravityLegal\GravityLegalAPI</package>
      <className>GravityLegal\GravityLegalAPI\GravityLegalService</className>
      <methodName>DeleteContact</methodName>
      <methodSignature>DeleteContact(GravityLegal\GravityLegalAPI\Contact $contact): bool</methodSignature>
      <fullMethod>DeleteContact(GravityLegal\GravityLegalAPI\Contact $contact): bool</fullMethod>
      <crap>2</crap>
      <complexity>2</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>GravityLegal\GravityLegalAPI</package>
      <className>GravityLegal\GravityLegalAPI\GravityLegalService</className>
      <methodName>CreateNewMatters</methodName>
      <methodSignature>CreateNewMatters(array $createMatterList): GravityLegal\GravityLegalAPI\EntityCreationResult</methodSignature>
      <fullMethod>CreateNewMatters(array $createMatterList): GravityLegal\GravityLegalAPI\EntityCreationResult</fullMethod>
      <crap>3</crap>
      <complexity>3</complexity>
      <coverage>93.75</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>GravityLegal\GravityLegalAPI</package>
      <className>GravityLegal\GravityLegalAPI\GravityLegalService</className>
      <methodName>FindOrCreateMatter</methodName>
      <methodSignature>FindOrCreateMatter(GravityLegal\GravityLegalAPI\CreateMatter $createMatter): ?GravityLegal\GravityLegalAPI\Matter</methodSignature>
      <fullMethod>FindOrCreateMatter(GravityLegal\GravityLegalAPI\CreateMatter $createMatter): ?GravityLegal\GravityLegalAPI\Matter</fullMethod>
      <crap>4</crap>
      <complexity>4</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>GravityLegal\GravityLegalAPI</package>
      <className>GravityLegal\GravityLegalAPI\GravityLegalService</className>
      <methodName>FindMatterByExternalId</methodName>
      <methodSignature>FindMatterByExternalId(string $externalId): ?GravityLegal\GravityLegalAPI\Matter</methodSignature>
      <fullMethod>FindMatterByExternalId(string $externalId): ?GravityLegal\GravityLegalAPI\Matter</fullMethod>
      <crap>4</crap>
      <complexity>4</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>GravityLegal\GravityLegalAPI</package>
      <className>GravityLegal\GravityLegalAPI\GravityLegalService</className>
      <methodName>CreatePaymentRequest</methodName>
      <methodSignature>CreatePaymentRequest(GravityLegal\GravityLegalAPI\PaymentRequest $paymentRequest): ?GravityLegal\GravityLegalAPI\PaymentRequestResponse</methodSignature>
      <fullMethod>CreatePaymentRequest(GravityLegal\GravityLegalAPI\PaymentRequest $paymentRequest): ?GravityLegal\GravityLegalAPI\PaymentRequestResponse</fullMethod>
      <crap>2</crap>
      <complexity>2</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>GravityLegal\GravityLegalAPI</package>
      <className>GravityLegal\GravityLegalAPI\GravityLegalService</className>
      <methodName>CreatePaymentRequests</methodName>
      <methodSignature>CreatePaymentRequests(array $createPaymentRequestList): GravityLegal\GravityLegalAPI\EntityCreationResult</methodSignature>
      <fullMethod>CreatePaymentRequests(array $createPaymentRequestList): GravityLegal\GravityLegalAPI\EntityCreationResult</fullMethod>
      <crap>3.01</crap>
      <complexity>3</complexity>
      <coverage>88.89</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>GravityLegal\GravityLegalAPI</package>
      <className>GravityLegal\GravityLegalAPI\GravityLegalService</className>
      <methodName>CreateNewPaylinkWithMatter</methodName>
      <methodSignature>CreateNewPaylinkWithMatter(GravityLegal\GravityLegalAPI\CreatePaylink $createPaylink, GravityLegal\GravityLegalAPI\CreateMatter $createMatter): GravityLegal\GravityLegalAPI\PaylinkInfo</methodSignature>
      <fullMethod>CreateNewPaylinkWithMatter(GravityLegal\GravityLegalAPI\CreatePaylink $createPaylink, GravityLegal\GravityLegalAPI\CreateMatter $createMatter): GravityLegal\GravityLegalAPI\PaylinkInfo</fullMethod>
      <crap>4</crap>
      <complexity>4</complexity>
      <coverage>94.74</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>GravityLegal\GravityLegalAPI</package>
      <className>GravityLegal\GravityLegalAPI\GravityLegalService</className>
      <methodName>CreateNewPaylinkWithDefaultDepositAccounts</methodName>
      <methodSignature>CreateNewPaylinkWithDefaultDepositAccounts(string $custId, string $clientId, float $operatingAmount, float $trustAmount, GravityLegal\GravityLegalAPI\DefaultDepositAccounts $defaultDepositAccounts, array $paymentMethods, string $memo, string $matterId, string $externalId): GravityLegal\GravityLegalAPI\PaylinkInfo</methodSignature>
      <fullMethod>CreateNewPaylinkWithDefaultDepositAccounts(string $custId, string $clientId, float $operatingAmount, float $trustAmount, GravityLegal\GravityLegalAPI\DefaultDepositAccounts $defaultDepositAccounts, array $paymentMethods, string $memo, string $matterId, string $externalId): GravityLegal\GravityLegalAPI\PaylinkInfo</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>GravityLegal\GravityLegalAPI</package>
      <className>GravityLegal\GravityLegalAPI\GravityLegalService</className>
      <methodName>CreateNewPaylink</methodName>
      <methodSignature>CreateNewPaylink(string $custId, string $clientId, float $operatingAmount, float $trustAmount, array $paymentMethods, string $memo, string $matterId, string $externalId): GravityLegal\GravityLegalAPI\PaylinkInfo</methodSignature>
      <fullMethod>CreateNewPaylink(string $custId, string $clientId, float $operatingAmount, float $trustAmount, array $paymentMethods, string $memo, string $matterId, string $externalId): GravityLegal\GravityLegalAPI\PaylinkInfo</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>GravityLegal\GravityLegalAPI</package>
      <className>GravityLegal\GravityLegalAPI\GravityLegalService</className>
      <methodName>CreateNewPaylinks</methodName>
      <methodSignature>CreateNewPaylinks(array $createPaylinkList): GravityLegal\GravityLegalAPI\EntityCreationResult</methodSignature>
      <fullMethod>CreateNewPaylinks(array $createPaylinkList): GravityLegal\GravityLegalAPI\EntityCreationResult</fullMethod>
      <crap>3.01</crap>
      <complexity>3</complexity>
      <coverage>88.89</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>GravityLegal\GravityLegalAPI</package>
      <className>GravityLegal\GravityLegalAPI\GravityLegalService</className>
      <methodName>GetPaylink</methodName>
      <methodSignature>GetPaylink(string $paylinkId): GravityLegal\GravityLegalAPI\Paylink</methodSignature>
      <fullMethod>GetPaylink(string $paylinkId): GravityLegal\GravityLegalAPI\Paylink</fullMethod>
      <crap>2</crap>
      <complexity>2</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>GravityLegal\GravityLegalAPI</package>
      <className>GravityLegal\GravityLegalAPI\GravityLegalService</className>
      <methodName>UpdatePaylink</methodName>
      <methodSignature>UpdatePaylink(GravityLegal\GravityLegalAPI\Paylink $paylink, float $operatingAmt, float $trustAmt): Unirest\Response</methodSignature>
      <fullMethod>UpdatePaylink(GravityLegal\GravityLegalAPI\Paylink $paylink, float $operatingAmt, float $trustAmt): Unirest\Response</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>GravityLegal\GravityLegalAPI</package>
      <className>GravityLegal\GravityLegalAPI\GravityLegalService</className>
      <methodName>AddToPaylink</methodName>
      <methodSignature>AddToPaylink(GravityLegal\GravityLegalAPI\Paylink $paylink, float $operatingAmt, float $trustAmt): Unirest\Response</methodSignature>
      <fullMethod>AddToPaylink(GravityLegal\GravityLegalAPI\Paylink $paylink, float $operatingAmt, float $trustAmt): Unirest\Response</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>GravityLegal\GravityLegalAPI</package>
      <className>GravityLegal\GravityLegalAPI\GravityLegalService</className>
      <methodName>TrustToOperatingTransfer</methodName>
      <methodSignature>TrustToOperatingTransfer(string $customerId, string $clientId, float $transferAmt): Unirest\Response</methodSignature>
      <fullMethod>TrustToOperatingTransfer(string $customerId, string $clientId, float $transferAmt): Unirest\Response</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>GravityLegal\GravityLegalAPI</package>
      <className>GravityLegal\GravityLegalAPI\GravityLegalService</className>
      <methodName>FetchCustomerTxn</methodName>
      <methodSignature>FetchCustomerTxn(GravityLegal\GravityLegalAPI\Customer $customer, DateTime $transactionSinceDateTime): GravityLegal\GravityLegalAPI\EntityQueryResult</methodSignature>
      <fullMethod>FetchCustomerTxn(GravityLegal\GravityLegalAPI\Customer $customer, DateTime $transactionSinceDateTime): GravityLegal\GravityLegalAPI\EntityQueryResult</fullMethod>
      <crap>13</crap>
      <complexity>13</complexity>
      <coverage>96.23</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>GravityLegal\GravityLegalAPI</package>
      <className>GravityLegal\GravityLegalAPI\GravityLegalService</className>
      <methodName>FetchPaylinkTxn</methodName>
      <methodSignature>FetchPaylinkTxn(GravityLegal\GravityLegalAPI\PaylinkTxn $paylinkTxn): GravityLegal\GravityLegalAPI\EntityQueryResult</methodSignature>
      <fullMethod>FetchPaylinkTxn(GravityLegal\GravityLegalAPI\PaylinkTxn $paylinkTxn): GravityLegal\GravityLegalAPI\EntityQueryResult</fullMethod>
      <crap>12</crap>
      <complexity>12</complexity>
      <coverage>95.56</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>GravityLegal\GravityLegalAPI</package>
      <className>GravityLegal\GravityLegalAPI\GravityLegalService</className>
      <methodName>GetPaymentById</methodName>
      <methodSignature>GetPaymentById(string $paymentId): ?GravityLegal\GravityLegalAPI\Payment</methodSignature>
      <fullMethod>GetPaymentById(string $paymentId): ?GravityLegal\GravityLegalAPI\Payment</fullMethod>
      <crap>4</crap>
      <complexity>4</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>GravityLegal\GravityLegalAPI</package>
      <className>GravityLegal\GravityLegalAPI\GravityLegalService</className>
      <methodName>FetchPaymentTxn</methodName>
      <methodSignature>FetchPaymentTxn(GravityLegal\GravityLegalAPI\Payment $payment): GravityLegal\GravityLegalAPI\EntityQueryResult</methodSignature>
      <fullMethod>FetchPaymentTxn(GravityLegal\GravityLegalAPI\Payment $payment): GravityLegal\GravityLegalAPI\EntityQueryResult</fullMethod>
      <crap>12</crap>
      <complexity>12</complexity>
      <coverage>95.35</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>GravityLegal\GravityLegalAPI</package>
      <className>GravityLegal\GravityLegalAPI\GravityLegalService</className>
      <methodName>GetNewPayments</methodName>
      <methodSignature>GetNewPayments(string $customerId, DateTime $transactionSinceDateTime): array</methodSignature>
      <fullMethod>GetNewPayments(string $customerId, DateTime $transactionSinceDateTime): array</fullMethod>
      <crap>16</crap>
      <complexity>16</complexity>
      <coverage>98.28</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>GravityLegal\GravityLegalAPI</package>
      <className>GravityLegal\GravityLegalAPI\GravityLegalService</className>
      <methodName>getHttpHeaders</methodName>
      <methodSignature>getHttpHeaders()</methodSignature>
      <fullMethod>getHttpHeaders()</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>GravityLegal\GravityLegalAPI</package>
      <className>GravityLegal\GravityLegalAPI\GravityLegalService</className>
      <methodName>setHttpHeaders</methodName>
      <methodSignature>setHttpHeaders($httpHeaders)</methodSignature>
      <fullMethod>setHttpHeaders($httpHeaders)</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>GravityLegal\GravityLegalAPI</package>
      <className>GravityLegal\GravityLegalAPI\GravityLegalService</className>
      <methodName>getBaseUrl</methodName>
      <methodSignature>getBaseUrl()</methodSignature>
      <fullMethod>getBaseUrl()</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>GravityLegal\GravityLegalAPI</package>
      <className>GravityLegal\GravityLegalAPI\GravityLegalService</className>
      <methodName>setBaseUrl</methodName>
      <methodSignature>setBaseUrl($baseUrl)</methodSignature>
      <fullMethod>setBaseUrl($baseUrl)</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>GravityLegal\GravityLegalAPI</package>
      <className>GravityLegal\GravityLegalAPI\GravityLegalService</className>
      <methodName>getPrahariBaseUrl</methodName>
      <methodSignature>getPrahariBaseUrl()</methodSignature>
      <fullMethod>getPrahariBaseUrl()</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>GravityLegal\GravityLegalAPI</package>
      <className>GravityLegal\GravityLegalAPI\GravityLegalService</className>
      <methodName>setPrahariBaseUrl</methodName>
      <methodSignature>setPrahariBaseUrl($prahariBaseUrl)</methodSignature>
      <fullMethod>setPrahariBaseUrl($prahariBaseUrl)</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>GravityLegal\GravityLegalAPI</package>
      <className>GravityLegal\GravityLegalAPI\GravityLegalService</className>
      <methodName>getOpsUrl</methodName>
      <methodSignature>getOpsUrl()</methodSignature>
      <fullMethod>getOpsUrl()</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>GravityLegal\GravityLegalAPI</package>
      <className>GravityLegal\GravityLegalAPI\GravityLegalService</className>
      <methodName>setOpsUrl</methodName>
      <methodSignature>setOpsUrl($opsUrl)</methodSignature>
      <fullMethod>setOpsUrl($opsUrl)</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>GravityLegal\GravityLegalAPI</package>
      <className>GravityLegal\GravityLegalAPI\GravityLegalService</className>
      <methodName>getAppId</methodName>
      <methodSignature>getAppId()</methodSignature>
      <fullMethod>getAppId()</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>GravityLegal\GravityLegalAPI</package>
      <className>GravityLegal\GravityLegalAPI\GravityLegalService</className>
      <methodName>setAppId</methodName>
      <methodSignature>setAppId($appId)</methodSignature>
      <fullMethod>setAppId($appId)</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>GravityLegal\GravityLegalAPI</package>
      <className>GravityLegal\GravityLegalAPI\GravityLegalService</className>
      <methodName>getOrgId</methodName>
      <methodSignature>getOrgId()</methodSignature>
      <fullMethod>getOrgId()</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>GravityLegal\GravityLegalAPI</package>
      <className>GravityLegal\GravityLegalAPI\GravityLegalService</className>
      <methodName>setOrgId</methodName>
      <methodSignature>setOrgId($orgId)</methodSignature>
      <fullMethod>setOrgId($orgId)</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>GravityLegal\GravityLegalAPI</package>
      <className>GravityLegal\GravityLegalAPI\GravityLegalService</className>
      <methodName>getLastRestResponse</methodName>
      <methodSignature>getLastRestResponse()</methodSignature>
      <fullMethod>getLastRestResponse()</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>GravityLegal\GravityLegalAPI</package>
      <className>GravityLegal\GravityLegalAPI\GravityLegalService</className>
      <methodName>setLastRestResponse</methodName>
      <methodSignature>setLastRestResponse($lastRestResponse)</methodSignature>
      <fullMethod>setLastRestResponse($lastRestResponse)</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>GravityLegal\GravityLegalAPI</package>
      <className>GravityLegal\GravityLegalAPI\GravityLegalService</className>
      <methodName>getEnvUrl</methodName>
      <methodSignature>getEnvUrl()</methodSignature>
      <fullMethod>getEnvUrl()</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>GravityLegal\GravityLegalAPI</package>
      <className>GravityLegal\GravityLegalAPI\GravityLegalService</className>
      <methodName>setEnvUrl</methodName>
      <methodSignature>setEnvUrl($envUrl)</methodSignature>
      <fullMethod>setEnvUrl($envUrl)</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>GravityLegal\GravityLegalAPI</package>
      <className>GravityLegal\GravityLegalAPI\GravityLegalService</className>
      <methodName>getPrahariUrl</methodName>
      <methodSignature>getPrahariUrl()</methodSignature>
      <fullMethod>getPrahariUrl()</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>GravityLegal\GravityLegalAPI</package>
      <className>GravityLegal\GravityLegalAPI\GravityLegalService</className>
      <methodName>setPrahariUrl</methodName>
      <methodSignature>setPrahariUrl($prahariUrl)</methodSignature>
      <fullMethod>setPrahariUrl($prahariUrl)</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>GravityLegal\GravityLegalAPI</package>
      <className>GravityLegal\GravityLegalAPI\Utility</className>
      <methodName>cast</methodName>
      <methodSignature>cast($object, $class_name)</methodSignature>
      <fullMethod>cast($object, $class_name)</fullMethod>
      <crap>4.05</crap>
      <complexity>4</complexity>
      <coverage>85.71</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>GravityLegal\GravityLegalAPI</package>
      <className>GravityLegal\GravityLegalAPI\Utility</className>
      <methodName>GUIDv4</methodName>
      <methodSignature>GUIDv4($trim)</methodSignature>
      <fullMethod>GUIDv4($trim)</fullMethod>
      <crap>19.12</crap>
      <complexity>6</complexity>
      <coverage>28.57</coverage>
      <crapLoad>0</crapLoad>
    </method>
  </methods>
</crap_result>
